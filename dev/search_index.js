var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Types","page":"API Reference","title":"Types","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"AbstractRGBE\nAbstractXYZE\nAbstractCCCE\nAbstractRGBE32\nAbstractXYZE32\nAbstractCCCE32\nRGBE32\nXYZE32\nCCCE32","category":"page"},{"location":"api/#HDRColorTypes.RGBE32","page":"API Reference","title":"HDRColorTypes.RGBE32","text":"RGBE32{T<:AbstractFloat} <: AbstractRGBE32{T}\n\n32-bit RGBE color type based on the Radiance HDR format.\n\nnote: Note\nWhile ColorTypes.RGB is usually assumed to be gamma-corrected sRGB, the RGBE format usually handles linear RGBs. The color primaries may also differ from those of sRGB.\n\n\n\n\n\n","category":"type"},{"location":"api/#HDRColorTypes.XYZE32","page":"API Reference","title":"HDRColorTypes.XYZE32","text":"XYZE32{T<:AbstractFloat} <: AbstractXYZE32{T}\n\n32-bit XYZE color type based on the Radiance HDR format.\n\n\n\n\n\n","category":"type"},{"location":"api/#HDRColorTypes.CCCE32","page":"API Reference","title":"HDRColorTypes.CCCE32","text":"CCCE32{T} = Union{RGBE32{T}, XYZE32{T}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions","page":"API Reference","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"rgbe32\nxyze32\nccce32","category":"page"},{"location":"api/#HDRColorTypes.rgbe32","page":"API Reference","title":"HDRColorTypes.rgbe32","text":"rgbe32(r8::UInt8, g8::UInt8, b8::UInt8, e8::UInt8) -> RGBE32{Float32}\n\nConstruct an RGBE32 color from four arguments in UInt8. Note that RGBE32(r8, g8, b8, e8) is not allowed for compatibility with other AbstractRGB and TransparentRGB color constructors.\n\nSee also ccce32.\n\n\n\n\n\nrgbe32(rgbe::UInt32) -> RGBE32{Float32}\n\nConstruct an RGBE32 color from a UInt32 value in 0xRRGGBBEE format.\n\nSee also ccce32.\n\n\n\n\n\n","category":"function"},{"location":"api/#HDRColorTypes.xyze32","page":"API Reference","title":"HDRColorTypes.xyze32","text":"xyze32(x8::UInt8, y8::UInt8, z8::UInt8, e8::UInt8) -> XYZE32{Float32}\n\nConstruct an XYZE32 color from four arguments of UInt8. Note that XYZE32(x8, y8, z8, e8) is not allowed for compatibility with other XYZ, AXYZ, and XYZA color constructors.\n\nSee also ccce32.\n\n\n\n\n\nxyze32(xyze::UInt32) -> XYZE32{Float32}\n\nConstruct an XYZE32 color from a UInt32 value in 0xXXYYZZEE format.\n\nSee also ccce32.\n\n\n\n\n\n","category":"function"},{"location":"api/#HDRColorTypes.ccce32","page":"API Reference","title":"HDRColorTypes.ccce32","text":"ccce32(RGBE32{T}, c1::UInt8, c2::UInt8, c3::UInt8, e::UInt8) -> RGBE32{T}\nccce32(XYZE32{T}, c1::UInt8, c2::UInt8, c3::UInt8, e::UInt8) -> XYZE32{T}\n\nConstruct a Radiance HDR format color from four arguments of UInt8. If the component type T is not specified, Float32 is applied.\n\nThis function is a generic version of rgbe32 and xyze32.\n\n\n\n\n\nccce32(RGBE32{T}, ccce::UInt32) -> RGBE32{T}\nccce32(XYZE32{T}, ccce::UInt32) -> XYZE32{T}\n\nConstruct a Radiance HDR format color from a UInt32 value in 0xRRGGBBEE or 0xXXYYZZEE format. If the component type T is not specified, Float32 is applied.\n\nThis function is a generic version of rgbe32 and xyze32.\n\n\n\n\n\n","category":"function"},{"location":"#HDRColorTypes","page":"Introduction","title":"HDRColorTypes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package is an add-on to ColorTypes, and provides color types for high dynamic range imaging.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Note that types such as RGB{Float16} are already supported in ColorTypes. Currently this package supports the Radiance formats RGBE32 and XYZE32.","category":"page"},{"location":"#RGBE32-and-XYZE32","page":"Introduction","title":"RGBE32 and XYZE32","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"using HDRColorTypes\n\nRGBE32(100, 0, 0)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"sizeof(RGBE32{Float32})\nsizeof(RGBE32{Float64})","category":"page"}]
}
